name: Build for Windows & Linux

on:
  push:
    tags: [ "*.**" ]
    branches: [ public ]
  pull_request:
    branches: [ public ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-windows:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -A Win32

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Create commit
      run: |
        git config user.name 'AnAkkk'
        git config user.email 'anakkk@users.noreply.github.com'
        Copy-Item -Path D:\a\TFTrue\TFTrue\build\Release\TFTrue.dll -Destination release\TFTrue.dll
        git add release\TFTrue.dll
        git commit --message "GitHub Actions Windows build"
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
       branch: create-pull-request/build-linux
       
  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
        
    - name: Get dependencies
      run: sudo apt-get install -y linux-libc-dev-i386-cross gcc-multilib g++-multilib

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Create commit
      run: |
        git config user.name 'AnAkkk'
        git config user.email 'anakkk@users.noreply.github.com'
        cp /home/runner/work/TFTrue/TFTrue/build/TFTrue.so release/TFTrue.so -vf
        git add release/TFTrue.so
        git commit --message "GitHub Actions Linux build"
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
       branch: create-pull-request/build-windows
